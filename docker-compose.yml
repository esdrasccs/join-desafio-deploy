services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456789@
      POSTGRES_DB: projetoJoin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - minha_rede

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka    
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092,EXTERNAL://:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - minha_rede

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - minha_rede

  cadastroservices:
  
    build: 
      context: ./microservicos/cadastroservices
      dockerfile: Dockerfile 
    container_name: cadastroservices     
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    networks:
      - minha_rede

  notificationservices:
    build: 
      context: ./microservicos/notificationservices
      dockerfile: Dockerfile  
    container_name: notificationservices    
    ports:
      - "8082:8082"
    depends_on:     
      - kafka    
    networks:
      - minha_rede
        
  validationservices:
    build: 
      context: ./microservicos/validationservices
      dockerfile: Dockerfile 
    container_name: validationservices     
    ports:
      - "8083:8083"    
    networks:
      - minha_rede